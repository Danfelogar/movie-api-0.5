{"version":3,"sources":["common/apis/movieApi.js","common/apis/MovieApiKey.js","features/movies/movieSlice.js","features/store.js","components/Footer/Footer.js","images/user.png","components/Header/Header.js","components/MovieCard/MovieCard.js","components/MovieListing/MovieListing.js","components/Home/Home.js","components/MovieDetail/MovieDetail.js","images/msmnotFoundjpg.jpg","components/PageNotFound/PageNotFound.js","App.js","index.js"],"names":["axios","create","baseURL","APIKey","fetchAsyncMovies","createAsyncThunk","a","movieApi","get","params","apiKey","s","type","response","data","fetchAsyncShows","fetchAsyncMovieOrShowDetail","id","movieSlice","createSlice","name","initialState","movies","shows","selectMovieOrShow","reducers","removeSelectedMovieOrShow","state","extraReducers","pending","console","log","fulfilled","payload","rejected","actions","getAllMovies","getAllShows","getSelectedMovieOrShow","store","configureStore","reducer","moviesReducer","Footer","className","Header","to","src","user","alt","MovieCard","props","imdbID","Poster","Title","Year","MovieListing","renderMovies","renderShows","useSelector","Response","Search","map","movie","index","Error","Home","dispatch","useDispatch","useEffect","MovieDetail","useParams","Object","keys","length","imdbRating","imdbVotes","Runtime","Plot","Director","Actors","Genre","Language","Awards","PageNotFound","msmnotFoundjpg","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a83e256.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://www.omdbapi.com/\",\r\n});","export const APIKey = \"53b9c08\";","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport movieApi from \"../../common/apis/movieApi\";\r\nimport { APIKey } from \"../../common/apis/MovieApiKey\";\r\n\r\nexport const fetchAsyncMovies = createAsyncThunk(\r\n\"movies/fetchAsyncMovies\",\r\nasync () => {\r\n    const movieText = \"Transformers\";\r\n    // const response = await movieApi.get(\r\n    // `?apiKey=${APIKey}&s=${movieText}&type=movie`\r\n    // );\r\n    const response = await movieApi.get(``,{\r\n        params: {\r\n            apiKey: APIKey,\r\n            s: movieText,\r\n            type: 'movie',\r\n        }\r\n    })\r\n\r\n    //para optener infor en arrays, obj, etc.\r\n\r\n    // const responseRegister = await movieApi.post(`/register`,{\r\n        //     data: {\r\n            //         email: '',\r\n            //         userName: '',\r\n            //         password: '',\r\n            //     }\r\n            // })\r\n\r\n            //para manda informacion(formularios)\r\n\r\n    return response.data;\r\n}\r\n);\r\n\r\nexport const fetchAsyncShows = createAsyncThunk(\r\n\"movies/fetchAsyncShows\",\r\nasync () => {\r\n    const seriesText = \"Friends\";\r\n    const response = await movieApi.get(\r\n    `?apiKey=${APIKey}&s=${seriesText}&type=series`\r\n    );\r\n    return response.data;\r\n}\r\n);\r\n\r\nexport const fetchAsyncMovieOrShowDetail = createAsyncThunk(\r\n\"movies/fetchAsyncMovieOrShowDetail\",\r\nasync (id) => {\r\n    const response = await movieApi.get(`?apiKey=${APIKey}&i=${id}&Plot=full`);\r\n    return response.data;\r\n}\r\n);\r\n\r\nconst initialState = {\r\nmovies: {},\r\nshows: {},\r\nselectMovieOrShow: {},\r\n};\r\n\r\nconst movieSlice = createSlice({\r\nname: \"movies\",\r\ninitialState,\r\nreducers: {\r\n    removeSelectedMovieOrShow: (state) => {\r\n    state.selectMovieOrShow = {};\r\n    },\r\n},\r\nextraReducers: {\r\n    [fetchAsyncMovies.pending]: () => {\r\n    console.log(\"Pending\");\r\n    },\r\n    [fetchAsyncMovies.fulfilled]: (state, { payload }) => {\r\n    console.log(\"Fetched Successfully!\");\r\n    return { ...state, movies: payload };\r\n    },\r\n    [fetchAsyncMovies.rejected]: () => {\r\n    console.log(\"Rejected!\");\r\n    },\r\n    [fetchAsyncShows.fulfilled]: (state, { payload }) => {\r\n    console.log(\"Fetched Successfully!\");\r\n    return { ...state, shows: payload };\r\n    },\r\n    [fetchAsyncMovieOrShowDetail.fulfilled]: (state, { payload }) => {\r\n    console.log(\"Fetched Successfully!\");\r\n    return { ...state, selectMovieOrShow: payload };\r\n    },\r\n},\r\n});\r\n\r\n\r\nexport const { removeSelectedMovieOrShow } = movieSlice.actions;\r\nexport const getAllMovies = (state) => state.movies.movies;\r\nexport const getAllShows = (state) => state.movies.shows;\r\nexport const getSelectedMovieOrShow = (state) => state.movies.selectMovieOrShow;\r\nexport default movieSlice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport moviesReducer from './movies/movieSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        movies: moviesReducer,\r\n    },\r\n});","import React from 'react';\r\n\r\nimport \"./Footer.scss\";\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div>Movie App</div>\r\n            <div>Â©2021, Movie, Inc. or its affiliates</div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/user.109eb920.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport user from '../../images/user.png';\r\nimport './Header.scss'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to=\"/\">\r\n                <div className=\"logo\">Movie APP</div>\r\n            </Link>\r\n            <div className=\"user-image\">\r\n                <img src={ user } alt=\"user\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./MovieCard.scss\";\r\n\r\nexport const MovieCard = (props) => {\r\n\r\n    const { data } = props;\r\n\r\n    return (\r\n        <div className=\"card-item\">\r\n        <Link to={`/movie/${data.imdbID}`}>\r\n        <div className=\"card-inner\">\r\n            <div className=\"card-top\">\r\n            <img src={data.Poster} alt={data.Title} />\r\n            </div>\r\n            <div className=\"card-bottom\">\r\n            <div className=\"card-info\">\r\n                <h4>{data.Title}</h4>\r\n                <p>{data.Year}</p>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getAllMovies, getAllShows } from '../../features/movies/movieSlice'\r\nimport { MovieCard } from '../MovieCard/MovieCard';\r\nimport './MovieListing.scss';\r\n\r\nexport const MovieListing = () => {\r\n\r\n    const movies = useSelector(getAllMovies);\r\n    const shows = useSelector(getAllShows);\r\n    let renderMovies,\r\n    renderShows = \"\";\r\n\r\n    renderMovies =\r\n    movies.Response === \"True\" ? (\r\n        movies.Search.map((movie, index) => (\r\n        <MovieCard key={index} data={movie} />\r\n        ))\r\n    ) : (\r\n        <div className=\"movies-error\">\r\n        <h3>{movies.Error}</h3>\r\n        </div>\r\n    );\r\n\r\n    renderShows =\r\n    shows.Response === \"True\" ? (\r\n        shows.Search.map((movie, index) => <MovieCard key={index} data={movie} />)\r\n    ) : (\r\n        <div className=\"shows-error\">\r\n        <h3>{shows.Error}</h3>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n    <div className=\"movie-wrapper\">\r\n            <div className=\"movie-list\">\r\n        <h2>Movies</h2>\r\n        <div className=\"movie-container\">{renderMovies}</div>\r\n    </div>\r\n    <div className=\"show-list\">\r\n        <h2>Shows</h2>\r\n        <div className=\"movie-container\">{renderShows}</div>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport {MovieListing} from \"../MovieListing/MovieListing\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\nfetchAsyncMovies,\r\nfetchAsyncShows,\r\n} from \"../../features/movies/movieSlice\";\r\n\r\nexport const Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAsyncMovies());\r\n        dispatch(fetchAsyncShows());\r\n    }, [dispatch]);\r\n    return (\r\n        <div>\r\n            <div className=\"banner-img\"></div>\r\n            <MovieListing />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport \"./MovieDetail.scss\";\r\nimport { useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\nfetchAsyncMovieOrShowDetail,\r\ngetSelectedMovieOrShow,\r\nremoveSelectedMovieOrShow,\r\n} from \"../../features/movies/movieSlice\";\r\n\r\nconst MovieDetail = () => {\r\nconst { imdbID } = useParams();\r\nconst dispatch = useDispatch();\r\nconst data = useSelector(getSelectedMovieOrShow);\r\nconsole.log(data);\r\nuseEffect(() => {\r\n    dispatch(fetchAsyncMovieOrShowDetail(imdbID));\r\n    return () => {\r\n    dispatch(removeSelectedMovieOrShow());\r\n    };\r\n}, [dispatch, imdbID]);\r\nreturn (\r\n    <div className=\"movie-section\">\r\n    {Object.keys(data).length === 0 ? (\r\n        <div>...Loading</div>\r\n    ) : (\r\n        <>\r\n        <div className=\"section-left\">\r\n            <div className=\"movie-title\">{data.Title}</div>\r\n            <div className=\"movie-rating\">\r\n            <span>\r\n                IMDB Rating <i className=\"fa fa-star\"></i> : {data.imdbRating}\r\n            </span>\r\n            <span>\r\n                IMDB Votes <i className=\"fa fa-thumbs-up\"></i> :{\" \"}\r\n                {data.imdbVotes}\r\n            </span>\r\n            <span>\r\n                Runtime <i className=\"fa fa-film\"></i> : {data.Runtime}\r\n            </span>\r\n            <span>\r\n                Year <i className=\"fa fa-calendar\"></i> : {data.Year}\r\n            </span>\r\n            </div>\r\n            <div className=\"movie-plot\">{data.Plot}</div>\r\n            <div className=\"movie-info\">\r\n            <div>\r\n                <span>Director</span>\r\n                <span>{data.Director}</span>\r\n            </div>\r\n            <div>\r\n                <span>Stars</span>\r\n                <span>{data.Actors}</span>\r\n            </div>\r\n            <div>\r\n                <span>Generes</span>\r\n                <span>{data.Genre}</span>\r\n            </div>\r\n            <div>\r\n                <span>Languages</span>\r\n                <span>{data.Language}</span>\r\n            </div>\r\n            <div>\r\n                <span>Awards</span>\r\n                <span>{data.Awards}</span>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"section-right\">\r\n            <img src={data.Poster} alt={data.Title} />\r\n        </div>\r\n        </>\r\n    )}\r\n    </div>\r\n);\r\n};\r\n\r\nexport default MovieDetail;","export default __webpack_public_path__ + \"static/media/msmnotFoundjpg.38a2ceeb.jpg\";","import React from 'react';\r\nimport msmnotFoundjpg from '../../images/msmnotFoundjpg.jpg';\r\nimport './PageNotFound.scss';\r\n\r\nexport const PageNotFound = () => {\r\n    return (\r\n        <div className=\"pageNotFound\">\r\n            <img className=\"pageNotFound-img\" src={ msmnotFoundjpg } alt=\"pageNotFound\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nimport './App.scss';\nimport { Footer } from './components/Footer/Footer';\nimport { Header } from './components/Header/Header';\nimport { Home } from './components/Home/Home';\nimport  MovieDetail  from './components/MovieDetail/MovieDetail';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header></Header>\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/movie/:imdbID\" component={MovieDetail} />\n              <Route component={PageNotFound} />\n            </Switch>\n          </div>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n\nimport { store } from './features/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}